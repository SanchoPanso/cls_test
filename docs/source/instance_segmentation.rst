Сегментация
============

В этом разделе описывается процесс подготовки и обучения модели YOLOv8 для задачи инстансной сегментации. 
Он включает в себя описание следующих шагов:

* Создание датасета в формате YOLO
* Обучение модели YOLOv8 на задачу сегментации
* Экспорт модели YOLOv8 в формат для инференса


Создание датасета в формате YOLO
--------------------------------

Скрипт create_yolo_dataset.py предназначен для конвертации датасетов, аннотированных в формате COCO, 
в формат, совместимый с моделью YOLO. 
Это первый шаг в подготовке данных для обучения.

Перед использованием скрипта, убедитесь, что исходные датасеты размещены в папке segmentation_data/source_datasets. 
В этой папке должна быть следующая структура:

.. code-block:: bash
    
    - segmentation_data/source_datasets/
        - dataset1/
            - images/
            - annotations/
                - instances_default.json
        - dataset2/
            - images/
            - annotations/
                - instances_default.json
        -...


Скрипт анализирует исходные аннотации COCO, извлекает информацию о положении объектов (bounding boxes)
 и их классификации, после чего преобразует её в нужный формат.

Использование:

.. code-block:: bash

    python create_yolo_dataset.py --src_dir <path_to_coco_annotations> --dst_dir <path_to_yolo_dataset>

Параметры командной строки:

* --src_dir: путь к папке с исходными датасетами в формате COCO.
* --dst_dir: путь к папке для сохранения датасета в формате YOLO.

Для примера возьмем датасеты из папки segmentation_data/source_datasets и преобразуем их в датасет YOLO в папке segmentation_data/yolo_dataset:

.. code-block:: bash

    python create_yolo_dataset.py --src_dir segmentation_data/source_datasets --dst_dir segmentation_data/yolo_dataset


Обучение модели YOLOv8 на задачу сегментации
-------------------------------------------

Скрипт train_yolo_seg.py используется для обучения модели YOLOv8, используя подготовленный на предыдущем шаге датасет. 
Этот процесс является вторым шагом в подготовке модели к работе по задаче инстансной сегментации.

Скрипт инициирует обучение модели с возможностью настройки различных параметров, 
таких как количество эпох, размер батча и скорость обучения.

.. note::

    Также для обучения предусмотрена возможность логирования результатов в W&B. 
    Для этого потребуется зарегистрироваться на сервисе https://wandb.ai/ и предоставить api-ключ во время тренировки.


Использование:

.. code-block:: bash

    python train_yolo_seg.py --data <path_to_yolo_dataset> --epochs <num_epochs> --batch-size <batch_size>

Параметры командной строки:

* --data: путь к подготовленному датасету в формате YOLO.
* --epochs: количество эпох для обучения.
* --batch-size: размер батча.

.. note::

    Проверьте совместимость настроек обучения с вашей аппаратной конфигурацией, 
    особенно при использовании GPU, чтобы избежать проблем с переполнением памяти.

Для примера возмем полученный YOLO датасет в папке segmentation_data/yolo_dataset и обучим на нем model yolov8x-seg.pt.

.. code-block:: bash

    python train_yolo_seg.py --data segmentation_data/yolo_dataset/data.yaml --model yolov8x-seg.pt


.. note::

    Для тренировки используется библиотека ultralytics. 
    Поэтому при необходимости более тонкой настройки параметров, стоит обратиться к ней.


Экспорт модели YOLOv8 в формат для инференса
--------------------------------------------

Для того, чтобы обеспечить эффективную работу полученной сети, ее необходимо конвертировать в соответствующий формат.
Чтобы экспортировать модель в формат TensorRT, воспользуйтесь следующей командой:

.. code-block:: bash

    python export_to_trt.py --src_path <src_path> --dst_path <dst_path>


После что в <dst_path> появится папка с моделью в формате TensorRT, 
которая пригодна для размещения в репозитории моделей для Triton Inference Server.



